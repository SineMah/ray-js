{"version":3,"file":"ray.js","sources":["../src/config.js","../src/request.js","../src/posprocessor.js","../src/commands/command.js","../src/sanitize.js","../src/commands/notify.js","../src/commands/log.js","../src/commands/json.js","../src/commands/time.js","../src/commands/custom.js","../src/commands/dump.js","../src/ray.js","../index.umd.js"],"sourcesContent":["'use strict';\n\nclass Config {\n    static init (args = {}) {\n        globalThis.rayConfig = {\n            protocol: args.protocol ?? 'http',\n            host: args.host ?? '127.0.0.1',\n            port: args.port ?? 23517,\n            remote_path: args.remote_path ?? null,\n            local_path: args.local_path ?? null,\n            host_name: args.host_name ?? crypto.randomUUID(),\n            hasErrorListener: false,\n        };\n\n        if(globalThis.rayConfig.hasErrorListener === false) {\n\n            globalThis.rayConfig.hasErrorListener = true;\n\n            window.addEventListener('error', async (error) => {\n                const err = `${error.type}: ${error.message}\n                    at ${error.filename}:${error.lineno}`;\n\n                await (await Ray.dump(err)).red();\n            });\n        }\n    }\n}\n\nexport default Config;","'use strict';\n\nclass Request {\n    async send(data) {\n        const response = await fetch(this.url(), {\n            method: 'POST',\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify(data)\n        });\n        const responseData = await response.text();\n\n        return responseData === 'ok';\n    }\n\n    url() {\n        return `${globalThis.rayConfig.protocol}://${globalThis.rayConfig.host}:${globalThis.rayConfig.port}`;\n    }\n}\n\nexport default Request;","'use strict';\n\nimport Request from \"./request\";\n\nclass PostProcessor {\n\n    static run(uuid, origin) {\n        return new PostProcessor(uuid, origin);\n    }\n\n    constructor(uuid, origin) {\n        this.uuid = uuid;\n        this.origin = origin;\n    }\n\n    async purple () {\n        await this.color('purple');\n\n        return new PostProcessor(this.uuid, this.origin);\n    }\n\n    async green () {\n        await this.color('green');\n\n        return new PostProcessor(this.uuid, this.origin);\n    }\n\n    async orange () {\n        await this.color('orange');\n\n        return new PostProcessor(this.uuid, this.origin);\n    }\n\n    async blue () {\n        await this.color('blue');\n\n        return new PostProcessor(this.uuid, this.origin);\n    }\n\n    async grey () {\n        await this.color('grey');\n\n        return new PostProcessor(this.uuid, this.origin);\n    }\n\n    async red () {\n        await this.color('red');\n\n        return new PostProcessor(this.uuid, this.origin);\n    }\n\n    async color (color) {\n        const req = new Request();\n        const context = {\n            uuid: this.uuid,\n            payloads: [\n                {\n                    type: 'color',\n                    content:{\n                        color: color\n                    },\n                    origin: this.origin\n                }\n            ],\n            meta: {}\n        };\n\n        await req.send(context);\n    }\n}\n\nexport default PostProcessor;","'use strict';\n\nimport Request from '../request.js';\n\nclass Command {\n\n    async processCommand(type, content) {\n        const messageUuid = crypto.randomUUID();\n        const origin = this.getOrigin();\n        const payload = this.getPayload(messageUuid, type, content, origin);\n        const req = new Request();\n\n        await req.send(payload);\n\n        return {\n            uuid: messageUuid,\n            origin: origin,\n            payload: payload\n        };\n    }\n\n    getPayload(uuid, type, context, origin) {\n        return {\n            uuid: uuid,\n            payloads: [\n                {\n                    type: type,\n                    content: context,\n                    origin: origin\n                }\n            ],\n            meta: {}\n        };\n    }\n\n    getOrigin() {\n        const source = this.getStackTrace();\n\n        return {\n            file: source.file,\n            line_number: source.line,\n            hostname: globalThis.rayConfig.host_name\n        };\n    }\n\n    getStackTrace() {\n        const error = new Error();\n        let fileLine = error.stack\n            .split('\\n')\n            .slice(-1)[0] ?? '';\n\n        fileLine = fileLine.replace('at', '').trim();\n\n        const lines = fileLine.split(':');\n\n        // column -> not used atm\n        lines.pop();\n\n        const lineNumber = lines.pop();\n\n        return {\n            file: lines.join(':'),\n            line: lineNumber\n        }\n    }\n}\n\nexport default Command;","'use strict';\n\nclass Sanitizer {\n\n    static getString(data) {\n\n        if(typeof data !== 'string') {\n            data = JSON.stringify(data, null, 4);\n        }\n\n        return data;\n    }\n}\n\nexport default Sanitizer;","'use strict';\n\nimport Command from './command.js'\nimport PostProcessor from '../posprocessor.js';\nimport Sanitizer from '../sanitize.js';\n\nclass Notify extends Command {\n\n    async run(text) {\n        const content = {\n            value: text\n        };\n        const response = await this.processCommand('notify', Sanitizer.getString(content));\n\n        return new PostProcessor(response.uuid, response.origin);\n    }\n}\n\nexport default Notify;","'use strict';\n\nimport Command from './command.js'\nimport PostProcessor from '../posprocessor.js';\nimport Sanitizer from '../sanitize.js';\n\nclass Log extends Command {\n\n    async run(text) {\n        const content = {\n            values: [text]\n        };\n        const response = await this.processCommand('log', Sanitizer.getString(content));\n\n        return new PostProcessor(response.uuid, response.origin);\n    }\n}\n\nexport default Log;","'use strict';\n\nimport Command from './command.js'\nimport PostProcessor from '../posprocessor.js';\nimport Sanitizer from '../sanitize.js';\n\nclass Json extends Command {\n\n    async run(data) {\n        const content = {\n            value: Sanitizer.getString(data)\n        };\n        const response = await this.processCommand('json_string', content);\n\n        return new PostProcessor(response.uuid, response.origin);\n    }\n}\n\nexport default Json;","'use strict';\n\nimport Command from './command.js'\nimport PostProcessor from '../posprocessor.js';\n\nclass Time extends Command {\n\n    async run() {\n        const date = new Date();\n        const content = {\n            formatted: date.toISOString(),\n            timestamp: Math.floor(Date.now()/1000),\n            timezone: Intl.DateTimeFormat().resolvedOptions().timeZone\n        };\n        const response = await this.processCommand('carbon', content);\n\n        return new PostProcessor(response.uuid, response.origin);\n    }\n}\n\nexport default Time;","'use strict';\n\nimport Command from './command.js'\nimport PostProcessor from '../posprocessor.js';\n\nclass Custom extends Command {\n\n    async run(data, label) {\n        const content = {\n            content: data,\n            label: label\n        };\n        const response = await this.processCommand('custom', content);\n\n        return new PostProcessor(response.uuid, response.origin);\n    }\n}\n\nexport default Custom;","'use strict';\n\nimport Command from './command.js'\nimport PostProcessor from '../posprocessor.js';\nimport Sanitizer from '../sanitize.js';\n\nclass Dump extends Command {\n\n    async run(data) {\n        const content = {\n            content: `<pre class=\"relative overflow-x-auto w-full p-5 h-auto bg-gray-100 dark:bg-gray-800\"><code class=\"h-auto\">${Sanitizer.getString(data)}</code></pre>`,\n            label: ''\n        };\n        const response = await this.processCommand('custom', content);\n\n        return new PostProcessor(response.uuid, response.origin);\n    }\n}\n\nexport default Dump;","'use strict';\n\nimport Config from './config.js';\nimport PostProcessor from './posprocessor.js';\nimport Notify from './commands/notify.js';\nimport Log from './commands/log.js';\nimport Json from './commands/json.js';\nimport Time from './commands/time.js';\nimport Custom from './commands/custom.js';\nimport Dump from './commands/dump.js';\n\nclass Ray {\n    static config(args = {}) {\n        Config.init(args);\n    }\n\n    static async log (text) {\n        const log = new Log();\n        const response = await log.run(text);\n\n        return PostProcessor.run(response.uuid, response.origin);\n    }\n\n    static async json (data) {\n        const json = new Json();\n        const response = await json.run(data);\n\n        return PostProcessor.run(response.uuid, response.origin);\n    }\n\n    static async time () {\n        const time = new Time();\n        const response = await time.run();\n\n        return PostProcessor.run(response.uuid, response.origin);\n    }\n\n    static async notify (text) {\n        const notify = new Notify();\n        const response = await notify.run(text);\n\n        return PostProcessor.run(response.uuid, response.origin);\n    }\n\n    static async custom (data, label) {\n        const custom = new Custom();\n        const response = await custom.run(data, label);\n\n        return PostProcessor.run(response.uuid, response.origin);\n    }\n\n    static async dump (data) {\n        const dump = new Dump();\n        const response = await dump.run(data);\n\n        return PostProcessor.run(response.uuid, response.origin);\n    }\n}\n\nexport default Ray;","'use strict';\n\nimport ray from './src/ray.js';\n\nexport default { ray };"],"names":["ray"],"mappings":"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"}